on:
  push:
    branches:
      - master
name: releases
jobs:
  build:
    needs: test
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build
        run: go build -o dist/${{ matrix.os }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: dist/${{ matrix.os }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Downloading Artifact Ubuntu
        uses: actions/download-artifact@v2
        with:
          name: ubuntu-latest
          path: ./dist/

      - name: Downloading Artifact Macos
        uses: actions/download-artifact@v2
        with:
          name: macos-latest
          path: ./dist/

      - name: Downloading Artifact Windows
        uses: actions/download-artifact@v2
        with:
          name: windows-latest
          path: ./dist/

      - name: Create GitHub release
        id: create_new_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: 1.0.${{ github.run_number }}
          release_name: 1.0.${{ github.run_number }}

      - name: Upload Linux Executable to GitHub release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_new_release.outputs.upload_url }}
          asset_path: /home/runner/work/dog-escaper/dog-escaper/dist/ubuntu-latest
          asset_name: dog_escaper_ubuntu-latest
          asset_content_type: application/octet-stream

      - name: Upload Windows Executable to GitHub release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_new_release.outputs.upload_url }}
          asset_path: /home/runner/work/dog-escaper/dog-escaper/dist/windows-latest
          asset_name: dog_escaper_windows-latest
          asset_content_type: application/octet-stream

      - name: Upload Macos Executable to GitHub release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_new_release.outputs.upload_url }}
          asset_path: /home/runner/work/dog-escaper/dog-escaper/dist/macos-latest
          asset_name: dog_escaper_macos-latest
          asset_content_type: application/octet-stream

  docker:
    runs-on: ubuntu-latest
    needs: release
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: yagoazedias/dog-escaper:latest
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
